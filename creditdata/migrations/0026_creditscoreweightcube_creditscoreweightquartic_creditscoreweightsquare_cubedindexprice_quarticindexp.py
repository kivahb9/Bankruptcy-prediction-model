# Generated by Django 2.2.5 on 2019-10-07 10:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('creditdata', '0025_auto_20191007_1336'),
    ]

    operations = [
        migrations.CreateModel(
            name='CubedIndexPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, db_column='date', null=True, verbose_name='Date')),
                ('index_price', models.DecimalField(db_column='index_price', decimal_places=15, max_digits=60, verbose_name='Index price')),
                ('credit_score_index_price', models.DecimalField(db_column='credit_score_index_price', decimal_places=15, max_digits=60, verbose_name='Credit score index price')),
            ],
            options={
                'verbose_name': 'cubed_index_price',
                'verbose_name_plural': 'cubed_index_price',
                'db_table': 'cubed_index_price',
            },
        ),
        migrations.CreateModel(
            name='QuarticIndexPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, db_column='date', null=True, verbose_name='Date')),
                ('index_price', models.DecimalField(db_column='index_price', decimal_places=15, max_digits=60, verbose_name='Index price')),
                ('credit_score_index_price', models.DecimalField(db_column='credit_score_index_price', decimal_places=15, max_digits=60, verbose_name='Credit score index price')),
            ],
            options={
                'verbose_name': 'quartic_index_price',
                'verbose_name_plural': 'quartic_index_price',
                'db_table': 'quartic_index_price',
            },
        ),
        migrations.CreateModel(
            name='SquaredIndexPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, db_column='date', null=True, verbose_name='Date')),
                ('index_price', models.DecimalField(db_column='index_price', decimal_places=15, max_digits=60, verbose_name='Index price')),
                ('credit_score_index_price', models.DecimalField(db_column='credit_score_index_price', decimal_places=15, max_digits=60, verbose_name='Credit score index price')),
            ],
            options={
                'verbose_name': 'squared_index_price',
                'verbose_name_plural': 'squared_index_price',
                'db_table': 'squared_index_price',
            },
        ),
        migrations.CreateModel(
            name='CreditScoreWeightSquare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_date', models.DateField(blank=True, db_column='effective_date', default=None, editable=False, help_text='Date on which the record was updated. This is by default values and will be updated using python function save.', verbose_name='Effective Date')),
                ('isin', models.CharField(db_column='isin', default=None, help_text='Unique identifier', max_length=50, verbose_name='ISIN')),
                ('is_active', models.BooleanField(db_column='is_active', default=True, help_text='This column is used for soft delete. Users can reactivate the entry via portal', verbose_name='Is Active')),
                ('is_deleted', models.BooleanField(db_column='is_deleted', default=False, help_text='This column is used for hard delete. Users cannot reactivate the entry via portal', verbose_name='Is Delete')),
                ('created_date', models.DateTimeField(auto_now_add=True, db_column='created_date', help_text='Date on which the record was inserted. This is by default values and will be updated using python function save.', null=True, verbose_name='Created Date')),
                ('updated_date', models.DateTimeField(auto_now_add=True, db_column='update_date', help_text='Date on which the record was updated. This is by default values and will be updated using python function save.', null=True, verbose_name='Updated Date')),
                ('weight', models.DecimalField(blank=True, db_column='weight_square', decimal_places=10, editable=False, max_digits=60, null=True, verbose_name='Weight')),
                ('constituent_data', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='creditdata.ConstituentData')),
                ('constituent_master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='creditdata.ConstituentMaster')),
                ('creditscore', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='creditdata.CreditScore')),
            ],
            options={
                'verbose_name': 'Credit_Score_Weight_Square',
                'verbose_name_plural': 'Credit_Score_Weights_Square',
                'db_table': 'Credit_Score_Weight_Square',
            },
        ),
        migrations.CreateModel(
            name='CreditScoreWeightQuartic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_date', models.DateField(blank=True, db_column='effective_date', default=None, editable=False, help_text='Date on which the record was updated. This is by default values and will be updated using python function save.', verbose_name='Effective Date')),
                ('isin', models.CharField(db_column='isin', default=None, help_text='Unique identifier', max_length=50, verbose_name='ISIN')),
                ('is_active', models.BooleanField(db_column='is_active', default=True, help_text='This column is used for soft delete. Users can reactivate the entry via portal', verbose_name='Is Active')),
                ('is_deleted', models.BooleanField(db_column='is_deleted', default=False, help_text='This column is used for hard delete. Users cannot reactivate the entry via portal', verbose_name='Is Delete')),
                ('created_date', models.DateTimeField(auto_now_add=True, db_column='created_date', help_text='Date on which the record was inserted. This is by default values and will be updated using python function save.', null=True, verbose_name='Created Date')),
                ('updated_date', models.DateTimeField(auto_now_add=True, db_column='update_date', help_text='Date on which the record was updated. This is by default values and will be updated using python function save.', null=True, verbose_name='Updated Date')),
                ('weight', models.DecimalField(blank=True, db_column='weight_quartic', decimal_places=10, editable=False, max_digits=60, null=True, verbose_name='Weight')),
                ('constituent_data', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='creditdata.ConstituentData')),
                ('constituent_master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='creditdata.ConstituentMaster')),
                ('creditscore', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='creditdata.CreditScore')),
            ],
            options={
                'verbose_name': 'Credit_Score_Weight_quartic',
                'verbose_name_plural': 'Credit_Score_Weights_quartic',
                'db_table': 'Credit_Score_Weight_quartic',
            },
        ),
        migrations.CreateModel(
            name='CreditScoreWeightCube',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_date', models.DateField(blank=True, db_column='effective_date', default=None, editable=False, help_text='Date on which the record was updated. This is by default values and will be updated using python function save.', verbose_name='Effective Date')),
                ('isin', models.CharField(db_column='isin', default=None, help_text='Unique identifier', max_length=50, verbose_name='ISIN')),
                ('is_active', models.BooleanField(db_column='is_active', default=True, help_text='This column is used for soft delete. Users can reactivate the entry via portal', verbose_name='Is Active')),
                ('is_deleted', models.BooleanField(db_column='is_deleted', default=False, help_text='This column is used for hard delete. Users cannot reactivate the entry via portal', verbose_name='Is Delete')),
                ('created_date', models.DateTimeField(auto_now_add=True, db_column='created_date', help_text='Date on which the record was inserted. This is by default values and will be updated using python function save.', null=True, verbose_name='Created Date')),
                ('updated_date', models.DateTimeField(auto_now_add=True, db_column='update_date', help_text='Date on which the record was updated. This is by default values and will be updated using python function save.', null=True, verbose_name='Updated Date')),
                ('weight', models.DecimalField(blank=True, db_column='weight_cube', decimal_places=10, editable=False, max_digits=60, null=True, verbose_name='Weight')),
                ('constituent_data', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='creditdata.ConstituentData')),
                ('constituent_master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='creditdata.ConstituentMaster')),
                ('creditscore', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='creditdata.CreditScore')),
            ],
            options={
                'verbose_name': 'Credit_Score_Weight_cube',
                'verbose_name_plural': 'Credit_Score_Weights_cube',
                'db_table': 'Credit_Score_Weight_cube',
            },
        ),
    ]
